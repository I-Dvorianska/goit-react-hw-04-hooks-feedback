{"version":3,"sources":["components/FeedbackBtns/FeedbackBtns.styled.js","components/FeedbackBtns/FeedbackBtns.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/NotificationMessage.js","App.js","index.js"],"names":["Title","styled","h2","List","ul","ListItem","li","Button","button","FeedbackBtns","incrementGood","options","map","el","type","onClick","Text","p","Message","Statistics","data","total","positivePercentage","good","neutral","bad","Section","title","children","NotificationMessage","message","App","useState","setGood","setNeutral","setBad","value","prevState","Error","Math","ceil","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAEaA,EAAQC,IAAOC,GAAV,kDAILC,EAAOF,IAAOG,GAAV,mEAKJC,EAAWJ,IAAOK,GAAV,kDAIRC,EAASN,IAAOO,OAAV,mR,OCmBJC,EA3BM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QACrC,OACE,8BACE,cAACR,EAAD,UACGQ,EAAQC,KAAI,SAACC,GACZ,OACE,cAACR,EAAD,UACE,cAACE,EAAD,CACEO,KAAK,SACLC,QAAS,WACPL,EAAcG,IAHlB,SAMGA,KAPUA,WCPdV,GAJQF,IAAOC,GAAV,kDAIED,IAAOG,GAAV,kDAIJY,EAAOf,IAAOgB,EAAV,oEAKJC,EAAUjB,IAAOgB,EAAV,gHCwBLE,EApCI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzBC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,IAEvB,OACE,8BACE,eAAC,EAAD,WACE,6BACE,eAACT,EAAD,oBAAaO,OAEf,6BACE,eAACP,EAAD,uBAAgBQ,OAElB,6BACE,eAACR,EAAD,mBAAYS,OAEd,6BACE,eAACT,EAAD,qBAAcK,OAEhB,6BACE,eAACL,EAAD,iCAA0BM,EAAmBD,GAA7C,eCLKK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,cAAC5B,EAAD,UAAQ2B,IACPC,MCDQC,EAJa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,cAACZ,EAAD,UAAUY,KC6DJC,MAzDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAsBMd,EAFGE,EAAOC,EAAUC,EAW1B,OACE,qCACE,cAAC,EAAD,CAASE,MAAM,wBAAf,SACE,cAAC,EAAD,CACEjB,cAjCe,SAAC0B,GACtB,OAAQA,GACN,IAAK,OACHH,GAAQ,SAACI,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHH,GAAW,SAACG,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHF,GAAO,SAACE,GAAD,OAAeA,EAAY,KAClC,MAEF,QACE,MAAM,IAAIC,MAAM,0BAqBd3B,QAAS,CAAC,OAAQ,UAAW,WAGhCU,EACC,cAAC,EAAD,CAASM,MAAM,aAAf,SACE,cAAC,EAAD,CACEP,KAAM,CAAEG,OAAMC,UAASC,OACvBJ,MAAOA,EACPC,mBApBV,SAAyCD,GACvC,OAAc,IAAVA,EACK,EAEFkB,KAAKC,KAAMjB,EAAOF,EAAS,UAoB9B,cAAC,EAAD,CAAqBS,QAAQ,0BCrDrCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.22b8b755.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h2`\r\n  margin-left: 40px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #000c66;\r\n  padding: 6px;\r\n  border-style: dotted;\r\n  border-radius: 4px;\r\n  border-width: 1px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: #b1d4e0;\r\n    border-color: #b1d4e0;\r\n  }\r\n`;\r\n","import {\r\n  List,\r\n  Button,\r\n  ListItem,\r\n} from \"components/FeedbackBtns/FeedbackBtns.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackBtns = ({ incrementGood, options }) => {\r\n  return (\r\n    <div>\r\n      <List>\r\n        {options.map((el) => {\r\n          return (\r\n            <ListItem key={el}>\r\n              <Button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  incrementGood(el);\r\n                }}\r\n              >\r\n                {el}\r\n              </Button>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackBtns.propTypes = {\r\n  incrementGood: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackBtns;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h2`\r\n  margin-left: 40px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-weight: 500;\r\n  color: #000c66;\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  font-weight: 600;\r\n  font-size: 25px;\r\n  margin-left: 40px;\r\n  margin-top: 50px;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { List, Text } from \"./Statistics.styled\";\r\n\r\nconst Statistics = ({ data, total, positivePercentage }) => {\r\n  const { good, neutral, bad } = data;\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        <li>\r\n          <Text>Good: {good}</Text>\r\n        </li>\r\n        <li>\r\n          <Text>Neutral: {neutral}</Text>\r\n        </li>\r\n        <li>\r\n          <Text>Bad: {bad}</Text>\r\n        </li>\r\n        <li>\r\n          <Text>Total: {total}</Text>\r\n        </li>\r\n        <li>\r\n          <Text>Positive Feedback: {positivePercentage(total)}%</Text>\r\n        </li>\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  data: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }),\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistics;\r\n","import { Title } from \"../FeedbackBtns/FeedbackBtns.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Section;\r\n","import { Message } from \"../Statistics/Statistics.styled\";\r\n\r\nconst NotificationMessage = ({ message }) => {\r\n  return <Message>{message}</Message>;\r\n};\r\n\r\nexport default NotificationMessage;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport FeedbackBtns from \"components/FeedbackBtns/FeedbackBtns\";\nimport Statistics from \"components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport NotificationMessage from \"components/Notification/NotificationMessage\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const incrementValue = (value) => {\n    switch (value) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n\n      default:\n        throw new Error(\"Something goes wrong\");\n    }\n  };\n\n  function countTotalFeedback() {\n    return good + neutral + bad;\n  }\n  const total = countTotalFeedback();\n\n  function countPositiveFeedbackPercentage(total) {\n    if (total === 0) {\n      return 0;\n    }\n    return Math.ceil((good / total) * 100);\n  }\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackBtns\n          incrementGood={incrementValue}\n          options={[\"good\", \"neutral\", \"bad\"]}\n        />\n      </Section>\n      {total ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            data={{ good, neutral, bad }}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        </Section>\n      ) : (\n        <NotificationMessage message=\"No feedback given\" />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}